<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="../../assets/static/shart.png" />
    <title>GymFit - Members</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #e85d04;
            --secondary-color: #0e1428;
            --approved-color: #45c164;
            --pending-color: #fbb934;
            --declined-color: #d9534f;
            --background-color: #f5f7fa;
            --card-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
        }

        body {
            font-family: 'Nunito Sans', sans-serif;
            background-color: var(--background-color);
            margin: 0;
            padding: 0;
        }

        #mainContent {
            padding: 30px 20px;
            max-width: 1400px;
            margin: 0 auto;
        }

        .members-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(14, 20, 40, 0.1);
        }

        .members-header h2 {
            font-size: 28px;
            font-weight: 700;
            color: var(--secondary-color);
            margin: 0;
        }

        .members-counter {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .counter {
            background-color: white;
            border-radius: 50px;
            padding: 8px 15px;
            font-weight: 700;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }

        .counter.all {
            background-color: var(--secondary-color);
            color: white;
        }

        .filter-buttons {
            display: flex;
            gap: 15px;
            margin-bottom: 25px;
        }

        .filter-btn {
            padding: 10px 20px;
            border-radius: 8px;
            border: none;
            background-color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }

        .filter-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .filter-btn.active {
            background-color: var(--primary-color);
            color: white;
        }

        .members-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            background-color: white;
            border-radius: 12px;
            box-shadow: var(--card-shadow);
            grid-column: 1 / -1;
        }

        .empty-state h3 {
            font-size: 20px;
            color: var(--secondary-color);
            margin-bottom: 10px;
        }

        .empty-state p {
            color: #666;
            max-width: 500px;
            margin: 0 auto;
        }

        #pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 40px;
        }

        .page-btn {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            border: none;
            background-color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }

        .page-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .page-btn.active {
            background-color: var(--primary-color);
            color: white;
        }

        .page-btn.nav {
            width: auto;
            padding: 0 15px;
        }

        .search-bar {
            margin-bottom: 25px;
            position: relative;
        }

        .search-bar input {
            width: 100%;
            padding: 12px 20px 12px 45px;
            border-radius: 8px;
            border: 1px solid rgba(14, 20, 40, 0.1);
            font-size: 16px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        }

        .search-bar input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 4px 12px rgba(232, 93, 4, 0.15);
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #999;
        }

        @media (max-width: 768px) {
            .members-grid {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 15px;
            }

            .members-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .filter-buttons {
                overflow-x: auto;
                padding-bottom: 5px;
                width: 100%;
            }

            .filter-btn {
                flex-shrink: 0;
            }
        }

        @media (max-width: 480px) {
            .members-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>

<body>
    <app-layout role="<%= role %>"></app-layout>

    <main id="mainContent">
        <div class="members-header">
            <h2>Gym Members</h2>
            <div class="members-counter">
                <div class="counter all" id="totalCounter"><%= memberships.length %> Total</div>
                <div class="counter" id="approvedCounter">0 Approved</div>
                <div class="counter" id="pendingCounter">0 Pending</div>
                <div class="counter" id="declinedCounter">0 Declined</div>
            </div>
        </div>

        <div class="search-bar">
            <span class="search-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8"></circle>
                    <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                </svg>
            </span>
            <input type="text" id="memberSearch" placeholder="Search members by name...">
        </div>

        <div class="filter-buttons">
            <button class="filter-btn active" data-filter="all">All Members</button>
            <button class="filter-btn" data-filter="approved">Approved</button>
            <button class="filter-btn" data-filter="pending">Pending</button>
            <button class="filter-btn" data-filter="declined">Declined</button>
        </div>

        <div class="members-grid" id="membersGrid">
            <% if (memberships.length === 0) { %>
                <div class="empty-state">
                    <h3>No members found</h3>
                    <p>Your gym doesn't have any membership requests yet. When members request to join your gym, they will appear here.</p>
                </div>
            <% } else { %>
                <% memberships.forEach((member, index) => { %>
                    <member-card 
                        name="<%= member.fullName %>" 
                        status="<%= member.status %>" 
                        src="<%= member.profileImage || '../../assets/user.png' %>"
                        data-id="<%= member._id %>"
                        data-joined="<%= new Date(member.requestedAt).toLocaleDateString() %>"
                        data-email="<%= member.email || '' %>"
                        data-phone="<%= member.phone || '' %>"
                        data-description="<%= member.description || 'No description provided.' %>"
                    ></member-card>
                <% }) %>
            <% } %>
        </div>

        <div id="pagination">
            <!-- Pagination will be generated by JavaScript -->
        </div>
    </main>

    <script src="../../scripts/components/app-layout.js"></script>
    <script src="../../scripts/components/member-card.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize counters
            updateCounters();
            
            // Filter functionality
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    // Update active button
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    button.classList.add('active');
                    
                    // Apply filter
                    const filter = button.getAttribute('data-filter');
                    filterMembers(filter);
                });
            });
            
            // Search functionality
            const searchInput = document.getElementById('memberSearch');
            searchInput.addEventListener('input', () => {
                const currentFilter = document.querySelector('.filter-btn.active').getAttribute('data-filter');
                filterMembers(currentFilter, searchInput.value.trim().toLowerCase());
            });
            
            // Initialize pagination
            initPagination();
        });
        
        function updateCounters() {
            const memberCards = document.querySelectorAll('member-card');
            let approved = 0, pending = 0, declined = 0;
            
            memberCards.forEach(card => {
                const status = card.getAttribute('status').toLowerCase();
                if (status === 'approved') approved++;
                else if (status === 'pending') pending++;
                else if (status === 'declined') declined++;
            });
            
            document.getElementById('approvedCounter').textContent = `${approved} Approved`;
            document.getElementById('pendingCounter').textContent = `${pending} Pending`;
            document.getElementById('declinedCounter').textContent = `${declined} Declined`;
        }
        
        function filterMembers(filter, searchTerm = '') {
            const memberCards = document.querySelectorAll('member-card');
            const membersGrid = document.getElementById('membersGrid');
            let visibleCount = 0;
            
            memberCards.forEach(card => {
                const status = card.getAttribute('status').toLowerCase();
                const name = card.getAttribute('name').toLowerCase();
                
                const matchesFilter = filter === 'all' || status === filter;
                const matchesSearch = !searchTerm || name.includes(searchTerm);
                
                if (matchesFilter && matchesSearch) {
                    card.style.display = '';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            
            // Show empty state if no members match the filter
            let emptyState = membersGrid.querySelector('.empty-state');
            if (visibleCount === 0) {
                if (!emptyState) {
                    emptyState = document.createElement('div');
                    emptyState.className = 'empty-state';
                    emptyState.innerHTML = `
                        <h3>No members found</h3>
                        <p>No members match your current filter${searchTerm ? ' and search' : ''}. Try adjusting your criteria.</p>
                    `;
                    membersGrid.appendChild(emptyState);
                }
            } else if (emptyState) {
                emptyState.remove();
            }
            
            // Reset pagination when filtering
            currentPage = 1;
            initPagination();
        }
        
        // Pagination variables
        let currentPage = 1;
        const itemsPerPage = 12;
        
        function initPagination() {
            const memberCards = Array.from(document.querySelectorAll('member-card'))
                .filter(card => card.style.display !== 'none');
            const totalPages = Math.ceil(memberCards.length / itemsPerPage);
            
            // Update pagination UI
            const paginationDiv = document.getElementById('pagination');
            paginationDiv.innerHTML = '';
            
            if (totalPages <= 1) {
                // Don't show pagination if only one page
                return;
            }
            
            // Previous button
            if (currentPage > 1) {
                const prevBtn = document.createElement('button');
                prevBtn.className = 'page-btn nav';
                prevBtn.textContent = 'Previous';
                prevBtn.addEventListener('click', () => {
                    currentPage--;
                    updatePage();
                });
                paginationDiv.appendChild(prevBtn);
            }
            
            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                if (totalPages > 7) {
                    // Simplified pagination for many pages
                    if (
                        i === 1 || 
                        i === totalPages || 
                        (i >= currentPage - 1 && i <= currentPage + 1)
                    ) {
                        addPageButton(i);
                    } else if (
                        (i === currentPage - 2 && i > 2) || 
                        (i === currentPage + 2 && i < totalPages - 1)
                    ) {
                        const ellipsis = document.createElement('span');
                        ellipsis.textContent = '...';
                        ellipsis.style.margin = '0 5px';
                        paginationDiv.appendChild(ellipsis);
                    }
                } else {
                    // Show all page numbers if not too many
                    addPageButton(i);
                }
            }
            
            // Next button
            if (currentPage < totalPages) {
                const nextBtn = document.createElement('button');
                nextBtn.className = 'page-btn nav';
                nextBtn.textContent = 'Next';
                nextBtn.addEventListener('click', () => {
                    currentPage++;
                    updatePage();
                });
                paginationDiv.appendChild(nextBtn);
            }
            
            // Apply pagination to members
            updatePage();
            
            function addPageButton(pageNum) {
                const pageBtn = document.createElement('button');
                pageBtn.className = 'page-btn' + (pageNum === currentPage ? ' active' : '');
                pageBtn.textContent = pageNum;
                pageBtn.addEventListener('click', () => {
                    currentPage = pageNum;
                    updatePage();
                });
                paginationDiv.appendChild(pageBtn);
            }
        }
        
        function updatePage() {
            const memberCards = Array.from(document.querySelectorAll('member-card'))
                .filter(card => card.style.display !== 'none');
            
            // Update which page buttons are active
            document.querySelectorAll('.page-btn').forEach(btn => {
                if (!btn.classList.contains('nav')) {
                    btn.classList.toggle('active', parseInt(btn.textContent) === currentPage);
                }
            });
            
            // Show/hide members based on current page
            memberCards.forEach((card, index) => {
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage - 1;
                
                if (index >= startIndex && index <= endIndex) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
            
            // Scroll to top when changing page
            window.scrollTo({
                top: document.getElementById('mainContent').offsetTop - 20,
                behavior: 'smooth'
            });
        }
    </script>
</body>

</html>